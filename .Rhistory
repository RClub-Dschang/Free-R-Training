mat1 <- matrix(c(34, 29, 76, 87), nrow = 2, byrow = T)
print(mat1)
mat2 <- mat1
names(mat2) <- list(Sex = c("Male", "Female"), Disease_status = c("Infected", "NonInfected"))
array(c(12, 32, 25, 36, 35, 58, 80, 62), dim = c(2,2,2))
array(c(12, 32, 25, 36, 35, 58, 80, 62), dim = c(2,2,2), byrow = T)
array(c(12, 32, 25, 36, 35, 58, 80, 62), dim = c(2,2,2))
?array
array(c(12,35,32,58,25,80,36,62), dim = c(2,2,2))
dimnames(MyArray) <- list(Disease_status = c("Positive", "Negative"),
Sleeping_time = c("Before 10", "10 and later"),
Pregnancy = c("Pregnant", "No-Pregnant"))
MyArray <- array(c(12,35,32,58,25,80,36,62), dim = c(2,2,2))
dimnames(MyArray) <- list(Disease_status = c("Positive", "Negative"),
Sleeping_time = c("Before 10", "10 and later"),
Pregnancy = c("Pregnant", "No-Pregnant"))
MyArray
#| echo: true
head(iris)
library(gt)
library(tidyverse)
library(knitr)
theme_set(theme_bw())
?glimpse
library(gt)
library(tidyverse)
library(knitr)
theme_set(theme_bw())
glyc <- c(1.01, 0.83, 1.05, 1.15, 0.99, 1.02, 1.07, 1.00, 1.19, 0.96, 1.05, 1.12, 0.94, 0.96, 0.81, 0.81, 0.83, 1.18, 1.20, 1.15)
status <- c(TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE,  TRUE,  TRUE, TRUE,  TRUE, TRUE, TRUE)
#| echo: true
print(glyc)
print(status)
mat1 <- matrix(c(34, 29, 76, 87), nrow = 2, byrow = T)
mat2 <- mat1
dimnames(mat2) <- list(Sex = c("Male", "Female"), Disease_status = c("Infected", "NonInfected"))
#| echo: true
print(mat1)
#| echo: true
print(mat2)
MyArray <- array(c(12,35,32,58,25,80,36,62), dim = c(2,2,2))
dimnames(MyArray) <- list(Disease_status = c("Positive", "Negative"),
Sleeping_time = c("Before 10", "10 and later"),
Pregnancy = c("Pregnant", "No-Pregnant"))
#| echo: true
print(MyArray)
#| echo: true
head(iris[,3:5])
MyList <- list(glyc, status, mat2, MyArray, iris[1:10,])
MyList
print(MyList)
MyList <- list(glyc = glyc, status = status, mat2 = mat2, MyArray = MyArray, iris = iris[1:10,])
print(MyList)
class(glyc)
class(status)
class(mat1)
class(MyArray)
class(MyList)
getwd()
library(foreign)
heart <- read.spss("data/Heart_Disease.sav")
getwd()
heart <- read.spss("../data/Heart_Disease.sav")
heart
class(heart)
heart <- read.spss("../data/Heart_Disease.sav", to.data.frame = T)
class(heart)
heart
library(gt)
library(tidyverse)
library(foreign)
library(knitr)
theme_set(theme_bw())
glimpse(heart)
?Foreign
?foreign
?read.spss
help(package = "foreign")
?read.csv
?read_csv
dbp <- read.csv("../data/DBP_Wide.scv", sep = ",", dec = ".")
dbp <- read.csv("../data/DBP_Wide.csv", sep = ",", dec = ".")
class(dbp)
dbp <- read_csv("../data/DBP_Wide.csv", sep = ",", dec = ".")
dbp2 <- read_csv("../data/DBP_Wide.csv")
class(dbp2)
library(readr)
help(package = "readxl")
list.files("data")
gastritis <- read_excel("../data/gastritis_data2.xlsx", sheet = "Sheet1")
library(readxl)
gastritis <- read_excel("../data/gastritis_data2.xlsx", sheet = "Sheet1")
class(gastritis)
gastritis
dbp
dbp2
help(package = "openxl")
library(openxlsx)
help(package = "openxlsx")
#| echo: true
#| eval: false
mean(dbp$DBP1, na.rm = T) # Arithmetic mean
MeanCI(dbp$DBP1, na.rm = T) # CI of the mean, under DescTools
library(DescTools)
#| echo: true
#| eval: false
mean(dbp$DBP1, na.rm = T) # Arithmetic mean
MeanCI(dbp$DBP1, na.rm = T) # CI of the mean, under DescTools
Gmean(dbp$DBP1, na.rm = T) # Geometric mean, under DescTools
Median(dbp$DBP1, na.rm = T) # Median, under Desctools
MedianCI(dbp$DBP1, na.rm = T) # CI of the median, under DescTools
sd(dbp$DBP1, na.rm = T) # Arithmetic standard deviation
Gsd(dbp$DBP1, na.rm = T) # Geometric sd, under DescTools
var(dbp$DBP1, na.rm = T) # Variance
range(dbp$DBP1, na.rm = T)
min(dbp$DBP1, na.rm = T)
max(dbp$DBP1, na.rm = T)
quantile(dbp$DBP1, na.rm = T)
quantile(dbp$DBP1, na.rm = T, .2) # 20% quantile.
IQR(dbp$DBP1, na.rm = T) # Inter-quartile range (3rd Qrt - 1st Qurt)
mean(dbp$DBP1, na.rm = T) # Arithmetic mean
MeanCI(dbp$DBP1, na.rm = T) # CI of the mean, under DescTools
Gmean(dbp$DBP1, na.rm = T) # Geometric mean, under DescTools
Median(dbp$DBP1, na.rm = T) # Median, under Desctools
MedianCI(dbp$DBP1, na.rm = T) # CI of the median, under DescTools
sd(dbp$DBP1, na.rm = T) # Arithmetic standard deviation
Gsd(dbp$DBP1, na.rm = T) # Geometric sd, under DescTools
var(dbp$DBP1, na.rm = T) # Variance
range(dbp$DBP1, na.rm = T)
min(dbp$DBP1, na.rm = T)
max(dbp$DBP1, na.rm = T)
quantile(dbp$DBP1, na.rm = T)
quantile(dbp$DBP1, na.rm = T, .2) # 20% quantile.
IQR(dbp$DBP1, na.rm = T) # Inter-quartile range (3rd Qrt - 1st Qurt)
boxplot(dbp$DBP1)
boxplot(dbp$DBP1~dbp$TRT)
boxplot(dbp$DBP1~dbp$TRT, main = "Diatolic Blood Pressure in Treatment (A) and Placebo groups (B)")
boxplot(dbp$DBP1~dbp$TRT, main = "Diatolic Blood Pressure in Treatment (A) and Placebo (B) groups",
xlab = "Treatment Arms", ylab = "Diatolic Blood Pressure (mmHg)")
boxplot(dbp$DBP1~dbp$TRT, main = "Diatolic Blood Pressure in Treatment (A) and Placebo (B) groups",
xlab = "Treatment Arms", ylab = "Diatolic Blood Pressure (mmHg)",
col = "white")
boxplot(dbp$DBP1~dbp$TRT, main = "Diatolic Blood Pressure in Treatment (A) and Placebo (B) groups",
xlab = "Treatment Arms", ylab = "Diatolic Blood Pressure (mmHg)",
col = c("lightblue", "cyan"))
boxplot(dbp$DBP1, ylab = "Diatolic Blood Pressure (mmHg)", col = "white")
library(patchwork)
p1+p2
p1 <- boxplot(dbp$DBP1, ylab = "Diatolic Blood Pressure (mmHg)", col = "white")
p2 <- boxplot(dbp$DBP1~dbp$TRT, main = "Diatolic Blood Pressure in Treatment (A) and Placebo (B) groups",
xlab = "Treatment Arms", ylab = "Diatolic Blood Pressure (mmHg)",
col = c("lightblue", "cyan"))
p1+p2
library(patchwork)
p1+p2
p1
#| fig-height: 5
#| echo: true
# 1st graph
hist(dbp$DBP1, ylab = "Diatolic Blood Pressure (mmHg)", col = "white")
#| fig-height: 5
#| echo: true
# 1st graph
hist(dbp$DBP1, ylab = "Diatolic Blood Pressure (mmHg)", col = "white",
main = NA)
#| fig-height: 5
#| echo: true
# 1st graph
hist(dbp$DBP1, xlab = "Diatolic Blood Pressure (mmHg)", col = "white",
main = NA)
hist(dbp$DBP1, xlab = "Diatolic Blood Pressure (mmHg)", col = "white",
main = NA, probability = T)
hist(dbp$DBP1, xlab = "Diatolic Blood Pressure (mmHg)", col = "white",
main = NA, probability = T)
lines(density(dbp$DBP1), lwd = 1.5, col = "red")
dim(heart)
nrow(dbp)
NROW(dbp)
length(dbp)
ncol(heart)
library(skimr)
skim(dpb)
skim(dbp)
library(skimr)
?skim
skim(dbp2)
?str
?glimpse
?summary
?skim
dbp |>
group_by(TRT) |>
skim()
getwd()
list.files()
list.dirs()
list.files("~")
getwd()
